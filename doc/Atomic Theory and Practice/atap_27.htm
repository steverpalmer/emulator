<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>27 Error Codes</title>
</head>

<body bgcolor="#FFFFFF">

<h1><font color="#0000FF">27 Error Codes</font></h1>

<p>The following list of errors includes BASIC errors, COS
errors, and errors generated by the extension ROM. Note that it
is possible to obtain errors not on this list by executing a BRK
in a machine-code program.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>2</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Too many
        GOSUBs</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The largest permitted depth of subroutine nesting is 14. This
error means that more than 14 GOSUB statements have been executed
without matching RETURN statements. Example:</p>

<pre>   10 GOSUB 10
   20 END</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>6</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>SUM
        Checksum error</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>When loading a named file from tape, each block is followed by
a checksum byte; if the checksum does not agree with this byte,
this error is given. The cause of checksum errors is usually a
damaged tape, or incorrect volume on playback. The remaining
blocks of a damaged tape can be retrieved using FLOAD.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>18 </strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Too many DO
        statements</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The largest permitted number of nested DO...UNTIL loops is 11.
This limit has been exceeded.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>29</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Unknown or
        missing function</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The statement contains a sequence of characters which are not
the name of a function. Example:</p>

<pre>   10 J=RAN+10    (where RND was intended).
   20 FPRINT $A    (string variables not permitted in FPRINT)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>30</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Array too
        large in DIM statement</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The DIM statement checks that there is valid merrory at the
last element of each array in the DIM statement. This error
implies that there is no RAM at the end of the array being
dimensioned.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>31</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>RETURN
        without GOSUB</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>A RETURN was found in the main program. RETURN is only
meaningful in a subroutine.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>39 </strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Attempt to
        use variable in LIST</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The LIST command may only be used with constants as its
arguments.<br>
Example:</p>

<pre>       LIST A,B</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>48</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>COM?
        Command error</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The command following the '*' was not a legal COS command.
Example:</p>

<pre>       *MEM    (command does not exist)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>69</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Illegal
        FDIM statement</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>Only the floating-point array variables %AA to %ZZ may be
dimensioned in an FDIM statement. Example:</p>

<pre>   10 FDIM %A(2)</pre>

<p>Attempt to use FDIM in direct mode.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>76</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Assembler
        label error</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The characters following the ':' character are not a legal
label. Legal labels are two letters followed by a number
optionally in brackets. Example:</p>

<pre>   10:LOOP JMP LOOP</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>91</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>No
        hexadecimal number after</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The characters immediately following the '#' symbol must be
legal hexadecimal characters 0-9 or A-F. Spaces are not
permitted. Example:</p>

<pre>   10 PRINT #J</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>94</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Unknown
        command, invalid statement terminator; missing END</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The statement has not been recognised as a legal BASIC
statement. The error may also be caused by an illegal character
after a valid statement, or by an attempt to execute past the end
of the program.<br>
Example:</p>

<pre>   10 LIST    (LIST is not allowed in a program)
   20 s A=B    (no space permitted between label and line number)</pre>

<p>An array appears in an INPUT statement; only simple variables
are permitted. Example:</p>

<pre>   25 INPUT AA(2)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>95</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Floating-point
        item missing or malformed</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>An unexpected character was encountered during the
interpretation of a floating-point statement. Example:</p>

<pre>   10 FUNTIL O    (argument must be a relational expression)
   20 FIF A PRINT &quot;OK&quot;    (logical variables not allowed)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>109</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Number too
        large</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>Attempt to enter a number which is too large to be represented
in BASIC. Example:</p>

<pre>   20 J=9999999999</pre>

<p>Error also occurs if the largest negative number is entered:</p>

<pre>   30 J=-2147483648</pre>

<p>even though this number can be represented internally. To
input this number, use the hexadecimal form #80000000.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>111</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Missing
        variable in FOR; too many FOR statements</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The control variable in a FOR...NEXT loop must be one of the
simple variables A to Z. Example:</p>

<pre>  35 FOR CC(1)=1 TO 10</pre>

<p>The maximum permitted number of nested FOR...NEXT loops is 11;
this number has been exceeded.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>118</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>NAME Name
        error</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The filename specified in a LOAD, SAVE, *LOAD, *SAVE, or
*FLOAD command was not a legal COS filename. Example:</p>

<pre>      SAVE &quot;THIS FILENAME IS TOO LONG&quot;</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>123</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Illegal
        argument to floating-point function</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>Examples:</p>

<pre>   12 A=SQR(-1)   (square root of a negative number)
   24 B=ASN(2)    (arcsine of number outside range -1 to 1)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>127</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Line number
        not found in GOTO or GOSUB</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The line number specified in a GOTO or GOSUB was not found.
Example:</p>

<pre>   10 GOTO 6
   15 N=6; GOTO N    (where there is no line 6)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>128</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Argument to
        SIN, COS or TAN too large</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The largest angle that may be specified in the SIN, COS or TAN
functions is about 8.3E6.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>129</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Division by
        zero, protected RAM in graphics mode</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>A number was divided by zero. Example:</p>

<pre>   10 J=J/(A-B)    (where A and B were equal)</pre>

<p>A CLEAR command specified a graphics mode that would have
destroyed BASIC's text space. Example:</p>

<pre>   10 ?18=t90 ;REM Move text space
   20 CLEAR 4</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>134</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Array
        subscript out of range</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>An array element was specified with a negative subscript, or
has not been dimensioned before use. Example:</p>

<pre>  10 DIM AA(4)
  20 AA(-2)=7</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>135</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>SYN? Syntax
        error</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>A COS command was recognised, but was followed by illegal
parameters.<br>
Example:</p>

<pre>     *SAVE &quot;FRED&quot;    (start and end addresses omitted)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>149</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Floating-point
        array subscript out of range</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>A floating-point array element was specified with a negative
subscript. Example:</p>

<pre>  10 %AA(-2)=0</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>152</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>GOSUB
        without RETURN; FOR without NEXT</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The GOSUB statement, when used in direct mode, must be
followed by a semicolon. Example:</p>

<pre>      GOSUB 10</pre>

<p>The FOR statement was used in direct mode without a NEXT
statement.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>156</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Assembler
        error: illegal type</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The argument specified for the operation is illegal. Example:</p>

<pre>   30 LDA 0300   (constant greater than 8 bits)
   50 STA (J,Y)  (not a legal addressing mode)
   70 BIT 023    (immediate addressing not available with BIT)</pre>

<p>This error is also generated if a JMP or JSR is assembled with
a zero-page address. This may occur, by chance, on the first pass
of a forward-reference JMP or JSR; in this case the value of the
label should be initialised to P before assembling. Example:</p>

<pre>   40 JMP #34    (jumps into page zero are not permitted)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>157</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Label not
        found</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>A label, a-z, was specified in a GOTO or GOSUB, but no
statement<br>
starting with that label was found. Example:</p>

<pre>   40 GOTO s</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>159</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Unmatched
        quotes in PRINT or INPUT</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>Strings in PRlNT statements, or entered in INPUT statements,
should have an even number of '&quot;' quotation marks. Example:</p>

<pre>      PRINT &quot;THIS IS A QUOTE:&quot;&quot;</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>165</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Loading
        interrupted</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The CTRL key will escape from a load-from-tape operation, with
this error message being produced.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>169</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Floating-point
        result too large</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The result of a floating-point calculation was larger than
about 1.7E38. Example:</p>

<pre>   20 FPRINT TAN(PI/2)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>174</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Significant
        item missing or malformed</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>An unexpected character was encountered during the
interpretation of a statement. Example:</p>

<pre>   10 G0TO 20                (O mistyped as zero; should be GOTO)
   20 FOR J TO 4             (expected '=' after J)
   30 FOR J=l STEP 1 TO 4    (order should be TO ... STEP)
   40 LET AA(1)=2            (LET is illegal with arrays)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>191</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>LOG or
        power of zero or a negative number</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The argument to the floating-point function LOG, or the
operator must be greater than zero. Examples:</p>

<pre>   10 %A=-1&quot;2
   30 %B=LOG(0)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>198</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>UNTIL with
        no DO</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>An UNTIL statement was encountered without a DO being active.
Example:</p>

<pre>   20 IF A=l DO A=A+1
   30 UNTIL A=3    (if A&lt;&gt;1 the DO is not executed)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>200</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Unmatched
        quotes in string</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>Strings appearing in a program should have an even number of
quotation marks.</p>

<p>&nbsp;</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>208</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Unrecognised
        mnemonic in assembler</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The mnemonic is not a legal 6502 assembler operation. Example:</p>

<pre>   20 ADD 020    (only ADC instruction available)
   30 .BYTE    (assembler directives are not available)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>216</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Illegal DIM
        statement</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The list of variables in the DIM statement contained an
illegal entry.<br>
Example:</p>

<pre>   20 DIM A(2,3)    (only one-dimensional arrays allowed)
   30 DIM AA(-2)    (negative array size)</pre>

<p>Attempt to use DIM in direct mode.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>230</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>NEXT
        without matching FOR</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>If a control variable is specified in a NEXT statement then
the variable must match the control variable in the corresponding
FOR statement. Example:</p>

<pre>   50 FOR N=1 TO 10
   20 FOR J=1 TO 10
   30 PRINT &quot;*&quot;
   40 NEXT N
   50 NEXT J</pre>

<p>A NEXT statement was encountered without any FOR statement
being active.</p>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>238</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Argument to
        EXP too large</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The calculation of the EXP function gave a result that was too
large.<br>
Example:</p>

<pre>   10 FPRINT EXP(100)</pre>

<table border="0" width="100%">
    <tr>
        <td width="10%"><font color="#0000FF"><strong>248</strong></font></td>
        <td width="80%"><font color="#0000FF"><strong>Not enough
        room to insert line</strong></font></td>
        <td width="10%">&nbsp;</td>
    </tr>
</table>

<p>The line just entered has used up all the available memory.
More memory can be released by shortening all the command names
if this has not already been done.</p>
</body>
</html>
