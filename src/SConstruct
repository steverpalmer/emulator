import subprocess

Help("""
Builder for my Acorn Atom Emulation
""")

def add_library(env, lib):
    env.AppendUnique( CPPPATH = subprocess.check_output(['pkg-config', '--cflags', lib]).split()
                    , LIBS    = subprocess.check_output(['pkg-config', '--libs', lib]).split()
                    )

common_env = Environment()
common_env['CCFLAGS']   = r'-Wall -g -pipe -std=c++11 -pthread -O0'
common_env['CPPPATH']   = [r'.']
common_env['LINKFLAGS'] = r'-pthread'

add_library(common_env, 'liblog4cxx')
add_library(common_env, 'glibmm-2.4')

common_env['BUILDERS']['rng2rnc'] = Builder(action='trang -I rng -O rnc $SOURCE $TARGET',
                                            suffix='rnc', src_suffix='rng')
common_env.rng2rnc('relaxng')
common_env.rng2rnc('atom')
common_env.rng2rnc('emulator')

common_env['BUILDERS']['rng2xsd'] = Builder(action='trang -I rng -O xsd $SOURCE $TARGET',
                                            suffix='xsd', src_suffix='rng')
common_env.rng2xsd('relaxng')
common_env.rng2xsd('atom')
common_env.rng2xsd('emulator')

common_env['BUILDERS']['uxf2png'] = Builder(action='umlet -action=convert -format=png -filename=$SOURCE',
                                            suffix='uxf.png', src_suffix='uxf')
common_env.uxf2png('system2')

libatom_env = common_env.Clone()
atomlib = libatom_env.StaticLibrary(r'atom', [ r'device.cpp'
                                             , r'ppia.cpp'
                                             , r'cpu.cpp'
                                             , r'atom.cpp'
                                             ])

atom_gui_sdl_env = common_env.Clone()
add_library(atom_gui_sdl_env, 'sdl')

add_library(atom_gui_sdl_env, 'libxml++-2.6')

#atom_gui_sdl_env.Program('atom', [ r'screen_graphics_controller.cpp'
#                                 , r'screen_graphics_view.cpp'
#                                 , r'keyboard_controller.cpp'
#                                 , r'config_xml.cpp'
#                                 , r'main.cpp'
#                                 , atomlib
#                                 ])
