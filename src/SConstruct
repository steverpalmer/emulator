Help("""
Builder for my Acorn Atom Emulation
""")

common_env = Environment()
common_env['CCFLAGS']   = r'-Wall -g -pipe -std=c++0x -pthread'
common_env['CPPPATH']   = [r'.']
common_env['LIBS']      = [r'log4cxx']
common_env['LINKFLAGS'] = r'-pthread'

common_env['BUILDERS']['rng2rnc'] = Builder(action='trang -I rng -O rnc $SOURCE $TARGET', suffix='rnc')
common_env.rng2rnc('relaxng.rnc', 'relaxng.rng')
common_env.rng2rnc('atom.rnc', 'atom.rng')

#TODO: Building as a library screws up the order on the gcc link command:-(
#libatom_env = common_env.Clone()
#atomlib = libatom_env.Library(r'atom', [ r'memory.cpp',
#                                         r'ppia.cpp',
#                                         r'cpu.cpp',
#                                         r'atom.cpp'])

atom_gui_sdl_env = common_env.Clone()
atom_gui_sdl_env.AppendUnique(CPPPATH = [r'/usr/include/SDL', r'/usr/include/libxml2'])
atom_gui_sdl_env.AppendUnique(LIBS = [r'SDL', r'xml2'])
atom_gui_sdl_env.Program('atom', [ r'memory.cpp',
                                   r'ppia.cpp',
                                   r'cpu.cpp',
                                   r'atom.cpp'] +
                                 [ r'screen_graphics_controller.cpp',
                                   r'screen_graphics_view.cpp',
                                   r'keyboard_controller.cpp',
                                   r'config_xml.cpp',
                                   r'main.cpp'
                                 ])
